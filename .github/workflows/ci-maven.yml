# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: 1. Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Caching Maven packages
    - name: 2. Caching Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # Maven build
    - name: 3. Build with Maven
      run: mvn -B package --file pom.xml

    # docker build & push to hub
    - name: 4. Docker build & push to hub
      run: | 
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t demo-hello . 
          docker push airstrider/demo-hello:latest

    # access server & pull and run the docker image
    - name: 5. Execute remote ssh commands using password
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 10.0.0.202
        username: ryan
        key: connor
        port: 22
        script: |
          docker stop demo-hello
          docker rm demo-hello
          docker image rm demo-hello
          docker pull demo-hello
          docker run -it -p 8080:8080 demo-hello 